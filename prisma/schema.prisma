// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Department {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  Booklet Booklet[]
}

model Booklet {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  departmentId String     @db.ObjectId
  imageUrl     String
  pdfUrl       String
}

model Activity {
  id                  String                @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber     String
  title               String
  description         String
  activityDepartments ActivityDepartments[]
  date                DateTime
  link                String
  imageUrl            String?
}

model Drive {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  referenceNumber String
  title           String

  industryType     String
  ctc              String
  about            String
  bond             String
  role             String
  location         String
  description      String
  eligibility      String
  link             String
  rounds           Round[]
  imageUrl         String?
  driveDate        DateTime
  lastDriveDate    DateTime
  downloadlink     String?
  driveDepartments DriveDepartments[]
}

model Round {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  drive   Drive  @relation(fields: [driveId], references: [id], onDelete: Cascade)
  driveId String @db.ObjectId
}

model DriveDepartments {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  drive   Drive?  @relation(fields: [driveId], references: [id], onDelete: Cascade)
  driveId String? @db.ObjectId
}

model ActivityDepartments {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  Activity   Activity? @relation(fields: [activityId], references: [id])
  activityId String?   @db.ObjectId
}
